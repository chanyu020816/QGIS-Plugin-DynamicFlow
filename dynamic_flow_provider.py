# -*- coding: utf-8 -*-

"""
/***************************************************************************
 DynamicFlow
                                 A QGIS plugin
 Dynamic is a qgis plugin to estimate the spatio-temporal 3D gradient flow from the point observation of the attributes values such as aggregated cell-phone mobility data. 
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2024-03-28
        copyright            : (C) 2024 by Bo-Cheng Lin, Chen-Yu Liu, Ta-Chien Chan
        email                : tachien@geohealth.tw

 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

__author__ = 'Bo-Cheng Lin, Chen-Yu Liu, Ta-Chien Chan'
__date__ = '2024-03-28'
__copyright__ = '(C) 2024 by Bo-Cheng Lin, Chen-Yu Liu, Ta-Chien Chan'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'

from qgis.core import QgsProcessingProvider
from .utils import GuiUtils
from .dynamic_flow_algorithm import DynamicFlowAlgorithm


class DynamicFlowProvider(QgsProcessingProvider):

    def __init__(self):
        QgsProcessingProvider.__init__(self)

    def unload(self):
        pass


    def loadAlgorithms(self):
        self.addAlgorithm(DynamicFlowAlgorithm())

    def id(self):
        return 'DynamicFlow'

    def name(self):
        return self.tr('DynamicFlow')

    def icon(self):
        return GuiUtils.get_icon('icon.svg')
    
    def svgIconPath(self) -> str:
            return GuiUtils.get_icon_svg('icon.svg')

    def longName(self):
        return self.name()
